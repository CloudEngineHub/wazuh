/*
 * Wazuh Vulnerability Scanner tests
 * Copyright (C) 2015, Wazuh Inc.
 * January 3, 2025.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "vulnerabiltyScannerStats_test.hpp"

void VulnerabilityScannerStatsTest::SetUp()
{
    VulnerabilityScannerStatsTest::instance().clear();
};

void VulnerabilityScannerStatsTest::TearDown() {};

TEST_F(VulnerabilityScannerStatsTest, statsTest)
{
    VulnerabilityScannerStats& stats = VulnerabilityScannerStats::instance();

    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::PROCESSED);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::PROCESSED_DELAYED);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::PACKAGE_INSERT);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::PACKAGE_DELETE);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::OS_EVENT);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::HOTFIX_INSERT);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::HOTFIX_DELETE);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::INTEGRITY_CLEAR);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::RESCAN_ALL_AGENTS);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::RESCAN_SINGLE_AGENT);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::CLEANUP_ALL_AGENT_DATA);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::CLEANUP_SINGLE_AGENT_DATA);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::GLOBAL_SYNC_INVENTORY);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::POSTPONED);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::DELAYED);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::DELAYED_RESCAN);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::REPORTS);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::CONTENT_REBOOT);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::OS_DATA_CACHE_MISS);
    stats.increment(VULNERABILITY_SCANNER_STATS_TYPE::REMEDIATION_CACHE_MISS);

    auto statsDump = stats.dump();

    EXPECT_EQ(statsDump.at("processed"), 1);
    EXPECT_EQ(statsDump.at("processed_delayed"), 1);
    EXPECT_EQ(statsDump.at("package_insert"), 1);
    EXPECT_EQ(statsDump.at("package_delete"), 1);
    EXPECT_EQ(statsDump.at("os_event"), 1);
    EXPECT_EQ(statsDump.at("hotfix_insert"), 1);
    EXPECT_EQ(statsDump.at("hotfix_delete"), 1);
    EXPECT_EQ(statsDump.at("integrity_clear"), 1);
    EXPECT_EQ(statsDump.at("rescan_all_agents"), 1);
    EXPECT_EQ(statsDump.at("rescan_single_agent"), 1);
    EXPECT_EQ(statsDump.at("cleanup_all_agent_data"), 1);
    EXPECT_EQ(statsDump.at("cleanup_single_agent_data"), 1);
    EXPECT_EQ(statsDump.at("global_sync_inventory"), 1);
    EXPECT_EQ(statsDump.at("postponed"), 1);
    EXPECT_EQ(statsDump.at("delayed"), 1);
    EXPECT_EQ(statsDump.at("delayed_rescan"), 1);
    EXPECT_EQ(statsDump.at("reports"), 1);
    EXPECT_EQ(statsDump.at("content_reboot"), 1);
    EXPECT_EQ(statsDump.at("os_data_cache_miss"), 1);
    EXPECT_EQ(statsDump.at("remediation_cache_miss"), 1);
}
